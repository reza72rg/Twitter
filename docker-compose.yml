services:
  postgres_twitter:
    image: postgres:13
    container_name: postgres_twitter
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5436:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis_twitter:
    container_name: redis_twitter
    image: redis
    restart: always
    ports:
      - "6382:6379"
    command: redis-server --save 60 1 --loglevel warning

  backend_twitter:
    build: .
    container_name: backend_twitter
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./core:/app_test/
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DATABASE_ENGINE=django.db.backends.postgresql
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=postgres_test
      - DATABASE_PORT=5432
    depends_on:
      - postgres_twitter
      - redis_twitter


volumes:
  postgres_data:
