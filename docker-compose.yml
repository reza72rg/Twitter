services:
  postgres_test:
    image: postgres:13
    container_name: postgres_test
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5436:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis_test:
    container_name: redis_test
    image: redis
    restart: always
    ports:
      - "6382:6379"
    command: redis-server --save 60 1 --loglevel warning

  backend:
    build: .
    container_name: backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./core:/app_test/
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DATABASE_ENGINE=django.db.backends.postgresql
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=postgres_test
      - DATABASE_PORT=5432
    depends_on:
      - postgres_test
      - redis_test

  worker_test:
    build: .
    command: celery -A core worker --loglevel warning
    volumes:
      - ./core:/app_test/
    depends_on:
      - redis_test
      - backend

  smtp4dev:
    image: rnwood/smtp4dev:v3
    restart: always
    ports:
      - '5000:80'
      - '25:25'
      - '143:143'
    volumes:
      - smtp4dev-data:/smtp4dev
    environment:
      - ServerOptions__HostName=smtp4dev

  master:
    image: locustio/locust
    ports:
      - "8089:8089"
    volumes:
      - ./core/locust:/mnt/locust
    command: -f /mnt/locust/locustfile.py --master -H http://backend_twitter:8000

  locust_worker:
    image: locustio/locust
    volumes:
      - ./core/locust:/mnt/locust
    command: -f /mnt/locust/locustfile.py --worker --master-host master

volumes:
  postgres_data:
  smtp4dev-data: